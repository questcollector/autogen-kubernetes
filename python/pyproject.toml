[tool.uv.workspace]
members = ["packages/*"]

[tool.uv]
dev-dependencies = [
    "mypy==1.13.0",
    "ruff==0.4.8",
    "pytest",
    "pytest-asyncio",
    "pytest-xdist",
    "typer",
    "rich",
    "polars",
    "pytest_mock",
    "poethepoet",
    "packaging",
    "grpcio-tools~=1.62.0",
    "mypy-protobuf",
    "cookiecutter",
    "poethepoet",
    "tomli",
]

[tool.uv.sources]
autogen-kubernetes = { workspace = true }

[tool.ruff]
line-length = 120
fix = true

target-version = "py310"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["E", "F", "W", "B", "Q", "I", "ASYNC", "T20"]
ignore = ["F401", "E501"]

[tool.ruff.lint.flake8-tidy-imports]
[tool.ruff.lint.flake8-tidy-imports.banned-api]
"unittest".msg = "Use `pytest` instead."

[tool.mypy]
strict = true
python_version = "3.10"
ignore_missing_imports = true

# from https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = false

disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = true

[tool.poe.tasks]
fmt = "python run_task_in_pkgs_if_exist.py fmt"
format.ref = "fmt"
lint = "python run_task_in_pkgs_if_exist.py lint"
mypy = "python run_task_in_pkgs_if_exist.py mypy"
test = "python run_task_in_pkgs_if_exist.py test"

check = ["fmt", "lint", "mypy", "test"]
